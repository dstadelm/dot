if-shell "test -e /usr/local/lib/python3.7/dist-packages/powerline/bindings/tmux/powerline.conf" "source-file /usr/local/lib/python3.7/dist-packages/powerline/bindings/tmux/powerline.conf"
if-shell "test -e /usr/local/lib/python3.8/dist-packages/powerline/bindings/tmux/powerline.conf" "source-file /usr/local/lib/python3.8/dist-packages/powerline/bindings/tmux/powerline.conf"

# Terminal behaviour
#"rxvt-unicode-256color:simt@"
set -g terminal-overrides ',xterm-256color:Tc'
set -g default-terminal "tmux-256color"
set -as terminal-overrides ',xterm*:sitm=\\E[3m'

setw -g mode-keys vi
#"rxvt-unicode-256color:simt@"
#set-option -g history-limit 10000
#set-option -g bell-action current
#set-option -g visual-bell on
#
# resize sharing
set-window-option -g aggressive-resize on

# Key bindings
set-option -g prefix "C-\\"
bind-key J resize-pane -U 10
bind-key K resize-pane -D 10
bind-key H resize-pane -L 20
bind-key L resize-pane -R 20
bind-key j resize-pane -U 
bind-key k resize-pane -D 
bind-key h resize-pane -L 
bind-key l resize-pane -R 

bind-key -n M-j select-pane -U
bind-key -n M-k select-pane -D
bind-key -n M-h select-pane -L
bind-key -n M-l select-pane -R


# Activity monitoring
set-window-option -g monitor-activity on
set-option -g visual-activity on


###############################################################################
# Window settings
#

# Start the window numbering at 1
set -g base-index 1

###############################################################################
# Pane settings
#

# Start tne pane numbering at 1 (easier to reach when changing between windows)
set -g pane-base-index 1

# Set the time (in ms) during which the pane numbers are showed
set -g display-panes-time 1500

# update environment variables
set-option -ga update-environment ' DISPLAY'

# pane switching using the mouse
#setw -g mode-mouse on
#set -g mouse-resize-pane on
set-option -g mouse on

# escape requires almost one second in nvim in tmux, following command
# is a work around
set -sg escape-time 0

# smart pane switching with awareness of vim splits
#bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-h) || tmux select-pane -L"
#bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-j) || tmux select-pane -D"
#bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-k) || tmux select-pane -U"
#bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-l) || tmux select-pane -R"
#bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys 'C-\\') || tmux select-pane -l"
#bind C-l send-keys 'C-l'

