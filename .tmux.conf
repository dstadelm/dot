set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'fcsonline/tmux-thumbs'

run '~/.tmux/plugins/tpm/tpm'
run-shell '~/.tmux/plugins/tmux-thumbs/tmux-thumbs.tmux'
if-shell "test -e /usr/local/lib/python3.7/dist-packages/powerline/bindings/tmux/powerline.conf" "source-file /usr/local/lib/python3.7/dist-packages/powerline/bindings/tmux/powerline.conf"
if-shell "test -e /usr/local/lib/python3.8/dist-packages/powerline/bindings/tmux/powerline.conf" "source-file /usr/local/lib/python3.8/dist-packages/powerline/bindings/tmux/powerline.conf"
if-shell "test -e ~/.pyenv/versions/3.10.10/lib/python3.10/site-packages/powerline/bindings/tmux/powerline.conf" "source-file ~/.pyenv/versions/3.10.10/lib/python3.10/site-packages/powerline/bindings/tmux/powerline.conf"

set-option -g status-position top
# Terminal behaviour
#"rxvt-unicode-256color:simt@"
set -g terminal-overrides ',xterm-256color:Tc'
set -g default-terminal "tmux-256color"
#set -as terminal-overrides ',xterm*:sitm=\\E[3m'
set -ga terminal-overrides ",xterm-256color*:Tc"
set -sa terminal-overrides ",xterm-256color*:Tc"
set -ga terminal-overrides ",*256col*:Tc"
set -sa terminal-overrides ",*256col*:Tc"
setw -g mode-keys vi
#"rxvt-unicode-256color:simt@"
#set-option -g history-limit 10000
#set-option -g bell-action current
#set-option -g visual-bell on
#
# resize sharing
set-window-option -g aggressive-resize on

# Key bindings
set-option -g prefix "C-space"
bind-key J resize-pane -U 10
bind-key K resize-pane -D 10
bind-key H resize-pane -L 20
bind-key L resize-pane -R 20
bind-key j resize-pane -U
bind-key k resize-pane -D
bind-key h resize-pane -L
bind-key l resize-pane -R

bind-key -n M-j select-pane -U
bind-key -n M-k select-pane -D
bind-key -n M-h select-pane -L
bind-key -n M-l select-pane -R

# forget the find window.  That is for chumps
bind-key -r f run-shell "tmux neww ~/bin/tmux-sessionizer.sh"

bind-key -r F run-shell "~/bin/tmux-sessionizer.sh ~/work_projects/fixpointpy/main"
bind-key -r N run-shell "~/bin/tmux-sessionizer.sh ~/work_projects/numerical_model/main"
bind-key -r A run-shell "~/bin/tmux-sessionizer.sh ~/private_projects/aoa/main"


# Activity monitoring
# set-window-option -g monitor-activity on
set-option -g visual-activity off
set-option -g visual-bell off
set-option -g visual-silence on

#-------------------------------------------------------#
###############################################################################
# Window settings
#

# Start the window numbering at 1
set -g base-index 1

###############################################################################
# Pane settings
#

# Start tne pane numbering at 1 (easier to reach when changing between windows)
set -g pane-base-index 1

# Set the time (in ms) during which the pane numbers are showed
set -g display-panes-time 1500

# update environment variables
set-option -ga update-environment ' DISPLAY'

# pane switching using the mouse
#setw -g mode-mouse on
#set -g mouse-resize-pane on
set-option -g mouse on

# escape requires almost one second in nvim in tmux, following command
# is a work around
set -sg escape-time 0

# smart pane switching with awareness of vim splits
#bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-h) || tmux select-pane -L"
#bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-j) || tmux select-pane -D"
#bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-k) || tmux select-pane -U"
#bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-l) || tmux select-pane -R"
#bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys 'C-\\') || tmux select-pane -l"
#bind C-l send-keys 'C-l'

# #-------------------------------------------------------#
# #Pane colours
# #-------------------------------------------------------#
# # set inactive/active window styles
# set -g window-style 'fg=colour247,bg=colour236'
# set -g window-active-style 'fg=colour250,bg=black'
#
# #pane border
# set -g pane-border-bg colour235
# set -g pane-border-fg colour238
# set -g pane-active-border-bg colour236
# set -g pane-active-border-fg colour51

#######################################################################################################################
## Use vim keybindings in copy mode
set-option -g mouse on
setw -g mode-keys vi
#set-option -s set-clipboard off
unbind p
bind p paste-buffer
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe 'xclip -se c -i'
bind-key -T copy-mode-vi Escape send-keys -X cancel
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'xclip -se c -i'
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel 'xclip -se c -i'

# 1. Now you can enter copy mode normally with CTRL+B and [.
# 2. Navigate the copy mode with vi-like-key bindings (u for up, d for down, etc.)
# 3. Hit v to start copying.
# 4. Press y or Enter to copy the text into the tmux buffer. This automatically cancels copy mode.
# 5. Paste into the buffer with <prefix>+P (make sure that it’s uppercase P).
# Or alternatively, use the mouse to copy text after you’ve entered copy mode.
#
# The above commands use xclip, a Linux command line tool for X11.
#######################################################################################################################
