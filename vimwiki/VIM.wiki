== Plugins ==
* [✗] todos
  - [✗] targets.vim
  - [✗] symbols-outline.nvim
  - [✗] nvim-autopairs
  - [✗] far.vim
  - [✗] nvim-git-fixer

https://jdhao.github.io/2021/12/31/using_nvim_after_three_years/
vim-adept : https://thevaluable.dev/vim-adept/

== Bookmarks ==
[[https://oroques.dev/notes/neovim-init/|Neovim 0.5 features and the switch to init.lua]]

== Tricks ==
* redirect output of command in normal mode to buffer
  `:silent put =execute(hi Search)`
* print all highlight groups
  `:so $VIMRUNTIME/syntax/hitest.vim`
* write doc for plugin
  `:set filetype=help`
* Ctrl-R= (expression register) (use @<reg> or Ctrl-R" to reference register)
* Ctrl-R" (insert last yank)

== Asynchornous make with LUA ==
https://phelipetls.github.io/posts/async-make-in-nvim-with-lua/

=== CTRL sequences that improve productivity ===
https://danidiaz.medium.com/useful-vim-key-bindings-for-command-and-insert-modes-85e372a27b6

== VimWiki Links for HTML ==
https://www.rosipov.com/blog/custom-templates-in-vimwiki/

== ToDo ==
    - https://gist.github.com/huytd/668fc018b019fbc49fa1c09101363397

== Close all but current buffer ==
:%bd|e#
%bd closes all buffers
e# opens last buffer

== Search and replace in visual selection ==
  :'<,'>s/\%V

== Open unnamed buffer (scratch) ==
:ene

== Increasing numbers ==
1. Visual select region
2. Ctrl-A
       0 -> 1
       0 -> 1
       0 -> 1
       0 -> 1
1. Visual select region
2. g Ctrl-A
       0 -> 1
       0 -> 2
       0 -> 3
       0 -> 4
1. Visual select region
2. 2g Ctrl-A
       0 -> 2
       0 -> 4
       0 -> 6
       0 -> 8


== Vim Registers ==
"<reg>p will print the content of the register to the buffer

": the last command register
"= the expression register

== Visual selection ==
o  -> switch corner of selection
gv -> previous selection

== Go to previous insert position ==
g; -> go to previous insert position in normal mode
gi -> go to previous insert position in insert mode

== Lua Config ==
Very good introduction: https://vonheikemen.github.io/devlog/tools/configuring-neovim-using-lua/

== Packer ==
1. packer.compile has to be executed, (:PackerCompile or :PackerSync)
2. the "config = " in the sections for the plugins expects a function or string
3. the "config = " does not get picked up if there are multiple plugins in one use = {} in that case you should use a "requires ="

== Highlight Groups ==
outputting all highlight groups
:so $VIMRUNTIME/syntax/hitest.vim

https://www.nerdfonts.com/cheat-sheet
